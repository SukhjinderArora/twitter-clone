// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @db.VarChar(255) @unique
  username String? @db.VarChar(30) @unique
  newUser Boolean @default(true)
  hashedPassword String? @db.VarChar(64)
  profile Profile?
  posts Post[]
  reposts Repost[]
  likes Like[]
  followedBy User[]  @relation("UserFollows", references: [id])
  following  User[]  @relation("UserFollows", references: [id])
  sessions Session[]
  googleId String? @db.VarChar(100) @unique
  provider String? @db.VarChar(50)
  createdAt DateTime @default(now())
}

model Profile {
  id Int @id @default(autoincrement())
  name String @db.VarChar(100)
  bio String? @db.VarChar(255)
  img String? @db.VarChar(4000)
  website String? @db.VarChar(100)
  dob DateTime?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int @unique
}

model Post {
  id Int @id @default(autoincrement())
  content String @db.VarChar(255)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  reposts Repost[]
  likes Like[]
  parentPostId Int?
  parentPost Post? @relation("PostReplies", fields: [parentPostId], references: [id])
  replies Post[] @relation("PostReplies")
  createdAt DateTime @default(now())
}

model Repost {
  id Int @id @default(autoincrement())
  post Post @relation(fields: [postId], references: [id])
  postId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  createdAt DateTime @default(now())
}

model Like {
  id Int @id @default(autoincrement())
  post Post @relation(fields: [postId], references: [id])
  postId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  createdAt DateTime @default(now())
}

model Session {
  id Int @id @default(autoincrement())
  refreshToken String @unique
  expirationTime DateTime
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  createdAt DateTime @default(now())
}